# Default values for adhoc-odoo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: adhoc/odoo-adhoc
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "13.0.2022.09.09-enterprise"
  pullSecret: "docker-registry"

dockerhubPullSecret: ""

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:

podSecurityContext:
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# https://v1-18.docs.kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  tcpSocket:
    port: 8069
  initialDelaySeconds: 10
  periodSeconds: 10
  failureThreshold: 20
  # Must be 1 for liveness and startup
  #successThreshold: 1
readinessProbe:
  tcpSocket:
    port: 8069
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 2

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  # adhoc-letsencrypt-prod-issuer
  # adhoc-letsencrypt-staging-issuer
  issuer: adhoc-letsencrypt-prod-issuer
  enableHttps: true
  # AltHost
  hosts: ""
  cloudMainDomain: dev-adhoc.com

  # True for Google Ingress or false for internal NGINX Ingress
  useGoogleCloudExternalLB: false

resources:
  limits:
    cpu: 3000m
    memory: 4096Mi
  requests:
    cpu: 30m
    memory: 250Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 90

nodeSelector:
tolerations:

multiEnvVariables:
  # example: "yes"
  # example2: "no"

odoo:
  # Database parameters
  pg:
    user: "odoo"
    pass: ""
    host: "adhoc-pg.adhoc-pg.svc.cluster.local"
    port: 5432
    db: "odoo"
  # Base Config
  basic:
    adminPass: "admin"
    dbFilter: ".*"
    wideModules: "base,web,server_mode,saas_client"
    logLevel: "info"
#    aerooHost: ""
    emailFrom: "notifications@adhoc.ar"
  # Performance Config
  saas:
    mode: false
  performance:
    workers: 0
    maxCronTh: 1
    maxDbConn: 100
    dbTemplate: "template0"
    maxMemHard: "4777721600"
    maxMemSoft: "671088640"
    maxTimeCpu: 400
    maxTimeReal: 800
    maxTimeCron: 1600
    maxHttpTh: 8
    saasPath: "/home/odoo/src/repositories/ingadhoc-odoo-saas"
  entrypoint:
    fixdbs: false
    fixdbsAdhoc: true
    # Dynamic Entrypoint
    repos: ""
    custom: ""
  # SMTP Config
  smtp:
    host: "smtp.mailgun.org"
    port: 25
    ssl: false
    user: ""
    pass: ""
    catchall: "example.com"
    whiteList: "adhoc.ar"
# Redis Config
redis:
  enabled: false
  host: ""
  pass: ""

# Storage
storage:
  ir_attachment_location: "s3"
  aws_region: "US-EAST1"
  aws_host: "https://storage.googleapis.com"
  aws_bucketname: "acp-us-east1-test"
  aws_access_key_id: "keyId"
  aws_secret_access_key: "secret"

nodeTag: "Prod"
